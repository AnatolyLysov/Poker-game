GitHub Copilot
Here are the most commonly used Git commands for daily workflows:

1. Check the Status of Your Repository
   git status
Shows the current state of your working directory (e.g., modified, staged, or untracked files).

2. Pull the Latest Changes
   git pull origin <branch-name>
Fetches and merges changes from the remote repository into your current branch.

3. Stage Changes
   git add <file>
Stages a specific file for commit.
   git add .
Stages all changes in the current directory.

4. Commit Changes
   git commit -m "Your commit message"
Saves the staged changes with a descriptive message.

5. Push Changes
   git push origin <branch-name>
Pushes your local commits to the remote repository.

6. View Commit History
   git log
Displays the commit history.
Shows a condensed, one-line-per-commit history.

7. Create a New Branch
   git branch <branch-name>
Creates a new branch.

8. Switch to a Branch
   git checkout <branch-name>
Switches to an existing branch.
   git switch <branch-name>
Alternative command to switch branches.

9. Merge a Branch
   git merge <branch-name>
Merges the specified branch into your current branch.

10. Discard Changes
   git checkout -- <file>
Discards changes in a specific file.

11. Unstage Changes
   git remote -v
Removes a file from the staging area without discarding changes.

12. Delete a Branch
   git branch -d <branch-name>
Deletes a branch locally.

13. Check Remote Repositories
   git remote -v
Lists the remote repositories linked to your project.

14. Clone a Repository
   git clone <repository-url>
Creates a local copy of a remote repository.

These commands are essential for daily Git operations. Let me know if you need help with any specific command!


These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.



See 'git help <command>' to read about a specific subcommand

Main Porcelain Commands
   add                     Add file contents to the index
   am                      Apply a series of patches from a mailbox
   archive                 Create an archive of files from a named tree
   backfill                Download missing objects in a partial clone
   bisect                  Use binary search to find the commit that introduced a bug
   branch                  List, create, or delete branches
   bundle                  Move objects and refs by archive
   checkout                Switch branches or restore working tree files
   cherry-pick             Apply the changes introduced by some existing commits
   citool                  Graphical alternative to git-commit
   clean                   Remove untracked files from the working tree
   clone                   Clone a repository into a new directory



   